@using Data.Models


<MudText Align="Align.Center" Style="margin-bottom:15px;margin-top:30px; font-size:18px; font-weight:bold;">Tavolinat</MudText>

<MudGrid>
    <ButtonKthehuComponent></ButtonKthehuComponent>
    @foreach(var d in GetTavolinatAktive())
    {
        <MudItem xs="3">
            <NumriTavolinesComponent NumriTavolines="@d.Tavolina" KaPorosi=@d.isActive ></NumriTavolinesComponent>
        </MudItem>
    }
</MudGrid>

@code {
    private IEnumerable<DetaletEFaturimit>? Orders;

    protected override async Task OnInitializedAsync()
    {
        Orders = await new Data.GetData().GetDetaletAsync();
    }


    protected List<Tavolinat> GetTavolinatAktive()
    {
        return (from d in Orders
                group d by new
                {
                    d.tav
                } into grp
                select new Tavolinat
                        {
                            Tavolina = grp.Key.tav,
                            isActive = grp.GroupBy(p=> p.eshteMbyllur).Count() == 1 ? false : true,
                        }).OrderByDescending(d=>d.isActive).OrderBy(d => d.Tavolina).ToList();
    }


    public partial class Tavolinat
    {
        public string? Tavolina { get; set; }
        public bool isActive { get; set; }
    }
}
