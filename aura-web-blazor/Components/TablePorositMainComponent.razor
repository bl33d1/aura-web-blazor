@using Data.Models
@inject NavigationManager UriHelper
<MudText Align="Align.Center" Style="margin-bottom:15px;margin-top:30px; font-size:16px; font-weight:bold;">Faturat e fundit</MudText>

<MudTable Class="rounded-lg" Striped=false Hover=true Dense=true Style="font-size:small;;" Items="@GetFaturat(true)" Breakpoint="Breakpoint.None" >
    <HeaderContent>
        <MudTh Style="font-weight:bold">Produkti</MudTh>
        <MudTh Style="font-weight:bold">Sasia</MudTh>
        <MudTh Style="font-weight:bold">Tavolina</MudTh>
        <MudTh Style="font-weight:bold">Kamarieri</MudTh>
        <MudTh Style="font-weight:bold">Vlera</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd Style="text-align:left">@context.artikulli</MudTd>
        <MudTd Style="text-align:center">@context.sasia</MudTd>
        <MudTd Style="text-align:center">@context.tav <br /> @DateTime.Parse(context.ora).ToString("HH:mm:ss")</MudTd>
        <MudTd Style="text-align:center">@context.kam</MudTd>
        <MudTd >@decimal.Parse(context.vlera).ToString("0.00")€</MudTd>
    </RowTemplate>
@*    <FooterContent >
            
            <MudButton @onclick=Navigate> @(TakeAll ? "Kthehu" : "Shiko te gjitha")</MudButton>
    </FooterContent>*@
    <PagerContent >
        <MudTablePager RowsPerPageString="Rreshtat::"/>
    </PagerContent>
</MudTable>


@code {
    bool fixed_header = true;
    bool fixed_footer = true;

    private IEnumerable<DetaletEFaturimit>? Orders;

    [Parameter]
    public bool TakeAll { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Orders = await new Data.GetData().GetDetaletAsync();
    }
    void Navigate()
    {
        if(!TakeAll)
        UriHelper.NavigateTo("faturat");
        else
        UriHelper.NavigateTo("/");

    }

    protected IEnumerable<DetaletEFaturimit> GetFaturat(bool TakeAll)
    {
        if (TakeAll)
            return Orders.OrderByDescending(d => DateTime.Parse(d.ora));
        else
            return Orders.OrderByDescending(d => DateTime.Parse(d.ora)).Take(15);
    }
}
