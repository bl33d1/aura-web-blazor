@using Data.Models
@inject NavigationManager UriHelper
@using aura_web_blazor.Services
@inject IOrderService OrderService
<MudSimpleTable Elevation="2"  Style="overflow-x: auto;" Class="mb-4" >

    <tbody>
        <tr>
            <td>Numri total i porosive:</td>
            <td style="font-weight:bolder; text-align:right;">@Orders.Where(d=>d.Tavolina.Equals(Tavolina)).Count().ToString()</td>
        </tr>
        <tr>
            <td>Shuma totale e porosive:</td>
            <td style="font-weight:bolder; text-align:right;">@ReturnTotalin()€</td>
        </tr>
        @if (IsActive)
        {
            <tr>
                <td>Shuma totale e porosisë aktive:</td>
                <td style="font-weight:bolder; text-align:right;">@ReturnTotalinAktive()€</td>
            </tr>        
        }
        

    </tbody>
</MudSimpleTable>


@code {


    [Parameter]
    public string? Tavolina { get; set; }
    [Parameter]
    public bool IsActive { get; set; }

    private IEnumerable<DetaletEFaturimit>? Orders;

    protected override async Task OnInitializedAsync()
    {
        Orders = (await OrderService.GetOrders()).ToList();
    }

    protected string ReturnSasiaPerProdukt(string Artikulli)
    {
        return Orders.Where(d => d.Artikulli.Equals(Artikulli)).Sum(d => int.Parse(d.Sasia)).ToString();;
    }
    
    protected string ReturnTotalin()
    {

        return Orders.Where(d => d.Tavolina.Equals(Tavolina)).Sum(d => decimal.Parse(d.Vlera)).ToString();
    }
    protected string ReturnTotalinAktive()
    {
        return Orders.Where(d=>d.Tavolina.Equals(Tavolina)).Where(d=>!d.EshteMbyllur.Contains("x")).Sum(d => decimal.Parse(d.Vlera)).ToString();
    }

    protected void NavigateTo(string Kamarieri)
    {
        UriHelper.NavigateTo("/kamarieri/"+Kamarieri);
    }
}