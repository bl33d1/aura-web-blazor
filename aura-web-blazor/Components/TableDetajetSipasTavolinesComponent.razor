@using aura_web_blazor.Components
@using Data.Models
@inject NavigationManager UriHelper 
@*<MudText Align="Align.Center" Style="margin-bottom:15px;margin-top:30px; font-size:16px; font-weight:bold;">Faturat e fundit</MudText>*@

<MudTable Striped=false Filter="new Func<DetaletEFaturimit,bool>(FilterFunc1)" @bind-SelectedItem="selectedItem1" Hover=true Dense=true Style="font-size:small;" Items="@GetFaturat(@Aktive)" Breakpoint="Breakpoint.None" >
    <ToolBarContent>
        <MudTextField @bind-Value="searchString1" FullWidth=true Placeholder="Kerko sipas kamarierit" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0 mb-2"></MudTextField>
        <MudSpacer />
    </ToolBarContent>
    <HeaderContent>
        <MudTh Style="font-weight:bold">Produkti</MudTh>
        <MudTh Style="font-weight:bold">Sasia</MudTh>
        <MudTh Style="font-weight:bold">Vlera</MudTh>
        <MudTh Style="font-weight:bold">Kamarieri</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd Style="text-align:left" >@context.artikulli</MudTd>
        <MudTd Style="text-align:center">@context.sasia</MudTd>
        <MudTd Style="text-align:center">@context.vlera€</MudTd>
        <MudTd Style="text-align:center">@context.kam <br /> @DateTime.Parse(context.ora).ToString("HH:mm:ss")</MudTd>
    </RowTemplate>
</MudTable>

@code {
    
    [Parameter]
    public string Tavolina { get; set; }
    [Parameter]
    public bool Aktive { get; set; }
    
     private string searchString1 = "";
    private DetaletEFaturimit selectedItem1 = null;
    private HashSet<DetaletEFaturimit> selectedItems = new HashSet<DetaletEFaturimit>();

    private IEnumerable<DetaletEFaturimit>? Orders;


    protected override async Task OnInitializedAsync()
    {
        Orders = await new Data.GetData().GetDetaletAsync();
    }

    protected IEnumerable<DetaletEFaturimit> GetFaturat(bool aktive)
    {
        if(aktive)
         return Orders.Where(d=>d.tav.Equals(Tavolina)).Where(d=>d.eshteMbyllur.Equals(d.tav)).OrderByDescending(d => DateTime.Parse(d.ora));
        else
         return Orders.Where(d=>d.tav.Equals(Tavolina)).Where(d=>d.eshteMbyllur.Equals("x") ||d.eshteMbyllur.Equals("X") ).OrderByDescending(d => DateTime.Parse(d.ora));
    }

        private bool FilterFunc1(DetaletEFaturimit element) => FilterFunc(element, searchString1);

    private bool FilterFunc(DetaletEFaturimit element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.kam.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }
}
